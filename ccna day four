# CCNA Exam Preparation: Day 4

## IP Routing

IP routing is the process of forwarding packets from one network to another based on the destination IP address. It is a fundamental concept in networking that enables communication between devices on different networks.

### Routing Fundamentals

1. **Routing Process**:

1. A device sends a packet to its default gateway (router) when the destination is on a different network
2. The router examines the destination IP address in the packet
3. The router looks up the destination network in its routing table
4. The router forwards the packet to the next hop or directly to the destination
5. This process repeats at each router until the packet reaches its destination



2. **Routing Table Components**:

1. **Network/Subnet**: The destination network address
2. **Subnet Mask/Prefix Length**: Defines the network portion of the address
3. **Next Hop**: The IP address of the next router in the path
4. **Outgoing Interface**: The interface through which the packet will be sent
5. **Administrative Distance (AD)**: Trustworthiness of the route source
6. **Metric**: Cost of the route (lower is better)



3. **Types of Routes**:

1. **Directly Connected**: Networks directly attached to the router
2. **Static**: Manually configured routes
3. **Dynamic**: Routes learned through routing protocols
4. **Default**: Used when no specific route matches (0.0.0.0/0 in IPv4, ::/0 in IPv6)



4. **Administrative Distance (AD)**:

1. Used to select the best route when multiple routing protocols learn routes to the same destination
2. Lower AD is preferred
3. Common AD values:

1. Directly Connected: 0
2. Static Route: 1
3. EIGRP Summary Route: 5
4. External BGP: 20
5. Internal EIGRP: 90
6. IGRP: 100
7. OSPF: 110
8. IS-IS: 115
9. RIP: 120
10. External EIGRP: 170
11. Internal BGP: 200
12. Unknown: 255 (considered unreachable)








## Router Benefits

Routers provide several key benefits in a network environment:

### Network Segmentation

1. **Broadcast Domain Isolation**:

1. Routers do not forward broadcast traffic between interfaces
2. Each router interface creates a separate broadcast domain
3. Reduces unnecessary traffic and improves network performance



2. **Security Boundaries**:

1. Routers can filter traffic between networks
2. Access control lists (ACLs) can be implemented to permit or deny specific traffic
3. Network Address Translation (NAT) can hide internal IP addresses



3. **Traffic Control**:

1. Quality of Service (QoS) can prioritize critical traffic
2. Traffic shaping can limit bandwidth usage
3. Policy-based routing can direct traffic based on criteria other than destination





### Path Selection and Redundancy

1. **Intelligent Path Selection**:

1. Routers select the best path based on metrics and administrative distance
2. Dynamic routing protocols automatically adapt to network changes
3. Load balancing can distribute traffic across multiple paths



2. **Network Redundancy**:

1. Multiple paths provide fault tolerance
2. If one path fails, traffic can be rerouted through alternative paths
3. First Hop Redundancy Protocols (FHRPs) provide gateway redundancy





### Protocol Translation

1. **Connecting Different Network Types**:

1. Routers can connect networks using different protocols
2. Can translate between IPv4 and IPv6 networks
3. Can connect different media types (Ethernet, Serial, Fiber, etc.)



2. **WAN Connectivity**:

1. Routers enable connections to Wide Area Networks (WANs)
2. Support various WAN technologies (MPLS, Metro Ethernet, Internet, etc.)
3. Provide VPN capabilities for secure remote access





### Network Scalability

1. **Hierarchical Design**:

1. Routers enable hierarchical network design
2. Core, distribution, and access layers can be implemented
3. Facilitates network growth and management



2. **Summarization**:

1. Route summarization reduces routing table size
2. Improves router performance and stability
3. Minimizes routing protocol overhead





## Common Router Features

Modern routers offer a wide range of features beyond basic routing:

### Routing Capabilities

1. **Static Routing**:

1. Manually configured routes
2. Low overhead but requires manual updates
3. Useful for small networks or specific routing requirements





```shellscript
# Configure a static route
Router(config)# ip route 192.168.2.0 255.255.255.0 192.168.1.2
# Or with an exit interface
Router(config)# ip route 192.168.2.0 255.255.255.0 GigabitEthernet0/1

# Configure a default route
Router(config)# ip route 0.0.0.0 0.0.0.0 192.168.1.2
```

2. **Dynamic Routing Protocols**:

1. Automatically exchange routing information
2. Adapt to network changes
3. Examples: RIP, EIGRP, OSPF, IS-IS, BGP





```shellscript
# Configure OSPF
Router(config)# router ospf 1
Router(config-router)# network 192.168.1.0 0.0.0.255 area 0
```

3. **Policy-Based Routing (PBR)**:

1. Routes based on criteria other than destination address
2. Can consider source address, protocol, port numbers, etc.
3. Overrides normal routing decisions





```shellscript
# Configure policy-based routing
Router(config)# access-list 101 permit ip 192.168.1.0 0.0.0.255 any
Router(config)# route-map PBR permit 10
Router(config-route-map)# match ip address 101
Router(config-route-map)# set ip next-hop 192.168.2.2
Router(config-route-map)# exit
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip policy route-map PBR
```

### Security Features

1. **Access Control Lists (ACLs)**:

1. Filter traffic based on defined criteria
2. Can be applied to interfaces, VTY lines, or routing protocols
3. Standard, Extended, and Named ACLs





```shellscript
# Configure a standard ACL
Router(config)# access-list 1 permit 192.168.1.0 0.0.0.255
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip access-group 1 in

# Configure an extended ACL
Router(config)# access-list 101 permit tcp any any eq 80
Router(config)# access-list 101 deny ip any any
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip access-group 101 in

# Configure a named ACL
Router(config)# ip access-list extended WEB-TRAFFIC
Router(config-ext-nacl)# permit tcp any any eq 80
Router(config-ext-nacl)# permit tcp any any eq 443
Router(config-ext-nacl)# deny ip any any
Router(config-ext-nacl)# exit
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip access-group WEB-TRAFFIC in
```

2. **Zone-Based Firewall**:

1. Groups interfaces into security zones
2. Defines policies between zones
3. Stateful inspection of traffic





```shellscript
# Configure a zone-based firewall
Router(config)# zone security INSIDE
Router(config-sec-zone)# exit
Router(config)# zone security OUTSIDE
Router(config-sec-zone)# exit

Router(config)# class-map type inspect match-any WEB-TRAFFIC
Router(config-cmap)# match protocol http
Router(config-cmap)# match protocol https
Router(config-cmap)# exit

Router(config)# policy-map type inspect INSIDE-TO-OUTSIDE
Router(config-pmap)# class type inspect WEB-TRAFFIC
Router(config-pmap-c)# inspect
Router(config-pmap-c)# exit
Router(config-pmap)# class class-default
Router(config-pmap-c)# drop
Router(config-pmap-c)# exit
Router(config-pmap)# exit

Router(config)# zone-pair security INSIDE-TO-OUTSIDE source INSIDE destination OUTSIDE
Router(config-sec-zone-pair)# service-policy type inspect INSIDE-TO-OUTSIDE
Router(config-sec-zone-pair)# exit

Router(config)# interface GigabitEthernet0/0
Router(config-if)# zone-member security INSIDE
Router(config-if)# exit

Router(config)# interface GigabitEthernet0/1
Router(config-if)# zone-member security OUTSIDE
```

3. **IPsec VPN**:

1. Secure site-to-site or remote access connectivity
2. Encrypts and authenticates IP traffic
3. Protects data confidentiality and integrity





```shellscript
# Configure a site-to-site IPsec VPN
Router(config)# crypto isakmp policy 10
Router(config-isakmp)# encryption aes 256
Router(config-isakmp)# hash sha
Router(config-isakmp)# authentication pre-share
Router(config-isakmp)# group 5
Router(config-isakmp)# lifetime 86400
Router(config-isakmp)# exit

Router(config)# crypto isakmp key STRONG-KEY address 203.0.113.2
Router(config)# crypto ipsec transform-set TS esp-aes 256 esp-sha-hmac
Router(config)# crypto map CRYPTO-MAP 10 ipsec-isakmp
Router(config-crypto-map)# set peer 203.0.113.2
Router(config-crypto-map)# set transform-set TS
Router(config-crypto-map)# match address 101
Router(config-crypto-map)# exit

Router(config)# access-list 101 permit ip 192.168.1.0 0.0.0.255 192.168.2.0 0.0.0.255

Router(config)# interface GigabitEthernet0/1
Router(config-if)# crypto map CRYPTO-MAP
```

4. **AAA (Authentication, Authorization, and Accounting)**:

1. Controls who can access the network (Authentication)
2. Determines what they can do (Authorization)
3. Tracks what they did (Accounting)
4. Can use local database or external servers (RADIUS, TACACS+)





```shellscript
# Configure local AAA
Router(config)# aaa new-model
Router(config)# username admin privilege 15 secret StrongPassword
Router(config)# aaa authentication login default local
Router(config)# aaa authorization exec default local
Router(config)# aaa accounting exec default start-stop local

# Configure AAA with RADIUS
Router(config)# aaa new-model
Router(config)# radius-server host 192.168.1.100 key RadiusKey
Router(config)# aaa authentication login default group radius local
Router(config)# aaa authorization exec default group radius local
Router(config)# aaa accounting exec default start-stop group radius
```

### Network Address Translation (NAT)

1. **Static NAT**:

1. One-to-one mapping of private to public addresses
2. Used for servers that need to be accessible from the internet





```shellscript
# Configure static NAT
Router(config)# ip nat inside source static 192.168.1.10 203.0.113.10
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip nat inside
Router(config-if)# exit
Router(config)# interface GigabitEthernet0/1
Router(config-if)# ip nat outside
```

2. **Dynamic NAT**:

1. Many-to-many mapping from a pool of public addresses
2. Used when you have more private addresses than public addresses





```shellscript
# Configure dynamic NAT
Router(config)# ip nat pool PUBLIC-POOL 203.0.113.20 203.0.113.30 netmask 255.255.255.0
Router(config)# access-list 1 permit 192.168.1.0 0.0.0.255
Router(config)# ip nat inside source list 1 pool PUBLIC-POOL
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip nat inside
Router(config-if)# exit
Router(config)# interface GigabitEthernet0/1
Router(config-if)# ip nat outside
```

3. **PAT (Port Address Translation)**:

1. Many-to-one mapping using different port numbers
2. Most common form of NAT for internet access





```shellscript
# Configure PAT
Router(config)# access-list 1 permit 192.168.1.0 0.0.0.255
Router(config)# ip nat inside source list 1 interface GigabitEthernet0/1 overload
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip nat inside
Router(config-if)# exit
Router(config)# interface GigabitEthernet0/1
Router(config-if)# ip nat outside
```

### Quality of Service (QoS)

1. **Classification and Marking**:

1. Identifies and marks traffic based on defined criteria
2. Uses IP Precedence, DSCP, CoS, etc.





```shellscript
# Configure traffic classification and marking
Router(config)# class-map VOICE-TRAFFIC
Router(config-cmap)# match protocol rtp audio
Router(config-cmap)# exit

Router(config)# policy-map MARK-TRAFFIC
Router(config-pmap)# class VOICE-TRAFFIC
Router(config-pmap-c)# set dscp ef
Router(config-pmap-c)# exit
Router(config-pmap)# exit

Router(config)# interface GigabitEthernet0/0
Router(config-if)# service-policy input MARK-TRAFFIC
```

2. **Queuing**:

1. Manages how packets are buffered and transmitted
2. Examples: FIFO, WFQ, CBWFQ, LLQ





```shellscript
# Configure Low Latency Queuing (LLQ)
Router(config)# class-map VOICE
Router(config-cmap)# match dscp ef
Router(config-cmap)# exit

Router(config)# class-map VIDEO
Router(config-cmap)# match dscp af41
Router(config-cmap)# exit

Router(config)# policy-map QOS-POLICY
Router(config-pmap)# class VOICE
Router(config-pmap-c)# priority 512
Router(config-pmap-c)# exit
Router(config-pmap)# class VIDEO
Router(config-pmap-c)# bandwidth 1024
Router(config-pmap-c)# exit
Router(config-pmap)# class class-default
Router(config-pmap-c)# fair-queue
Router(config-pmap-c)# exit
Router(config-pmap)# exit

Router(config)# interface GigabitEthernet0/1
Router(config-if)# service-policy output QOS-POLICY
```

3. **Traffic Shaping and Policing**:

1. Controls the rate of traffic flow
2. Shaping buffers excess traffic, policing drops it





```shellscript
# Configure traffic shaping
Router(config)# policy-map SHAPE
Router(config-pmap)# class class-default
Router(config-pmap-c)# shape average 1000000
Router(config-pmap-c)# exit
Router(config-pmap)# exit

Router(config)# interface GigabitEthernet0/1
Router(config-if)# service-policy output SHAPE

# Configure traffic policing
Router(config)# policy-map POLICE
Router(config-pmap)# class class-default
Router(config-pmap-c)# police 1000000 8000 exceed-action drop
Router(config-pmap-c)# exit
Router(config-pmap)# exit

Router(config)# interface GigabitEthernet0/0
Router(config-if)# service-policy input POLICE
```

### DHCP Services

1. **DHCP Server**:

1. Dynamically assigns IP addresses to clients
2. Can also provide DNS servers, default gateway, etc.





```shellscript
# Configure DHCP server
Router(config)# ip dhcp excluded-address 192.168.1.1 192.168.1.10
Router(config)# ip dhcp pool LAN-POOL
Router(dhcp-config)# network 192.168.1.0 255.255.255.0
Router(dhcp-config)# default-router 192.168.1.1
Router(dhcp-config)# dns-server 8.8.8.8 8.8.4.4
Router(dhcp-config)# lease 7
```

2. **DHCP Relay**:

1. Forwards DHCP requests to a DHCP server on a different subnet
2. Also known as DHCP Helper





```shellscript
# Configure DHCP relay
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip helper-address 192.168.2.10
```

### IPv6 Support

1. **Dual Stack**:

1. Runs both IPv4 and IPv6 simultaneously
2. Allows gradual migration to IPv6





```shellscript
# Configure dual stack
Router(config)# ipv6 unicast-routing
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip address 192.168.1.1 255.255.255.0
Router(config-if)# ipv6 address 2001:db8:1::1/64
Router(config-if)# ipv6 enable
```

2. **Tunneling**:

1. Encapsulates IPv6 packets within IPv4 packets
2. Allows IPv6 traffic to traverse IPv4 networks





```shellscript
# Configure 6to4 tunnel
Router(config)# interface Tunnel0
Router(config-if)# ipv6 address 2002:CB00:7100:1::1/64
Router(config-if)# tunnel source GigabitEthernet0/1
Router(config-if)# tunnel mode ipv6ip 6to4
Router(config-if)# exit

Router(config)# ipv6 route 2002::/16 Tunnel0
```

3. **Translation**:

1. Converts IPv4 packets to IPv6 packets and vice versa
2. Examples: NAT64, DNS64





```shellscript
# Configure NAT64
Router(config)# nat64 prefix 2001:db8:1::/96
Router(config)# interface GigabitEthernet0/0
Router(config-if)# nat64 enable
```

## Configuring Router Interfaces

Router interfaces connect to different networks and enable routing between them. Proper configuration is essential for network connectivity.

### Physical Interface Types

1. **Ethernet Interfaces**:

1. Most common interface type
2. Connects to LANs
3. Types: FastEthernet (100 Mbps), GigabitEthernet (1 Gbps), TenGigabitEthernet (10 Gbps)





```shellscript
# Configure an Ethernet interface
Router(config)# interface GigabitEthernet0/0
Router(config-if)# description Connection to LAN
Router(config-if)# ip address 192.168.1.1 255.255.255.0
Router(config-if)# no shutdown
```

2. **Serial Interfaces**:

1. Used for WAN connections
2. Requires DCE/DTE configuration
3. Lower bandwidth than Ethernet





```shellscript
# Configure a serial interface (DCE side)
Router(config)# interface Serial0/0/0
Router(config-if)# description WAN Link to Branch
Router(config-if)# ip address 192.168.2.1 255.255.255.252
Router(config-if)# clock rate 64000
Router(config-if)# no shutdown

# Configure a serial interface (DTE side)
Router(config)# interface Serial0/0/0
Router(config-if)# description WAN Link to HQ
Router(config-if)# ip address 192.168.2.2 255.255.255.252
Router(config-if)# no shutdown
```

3. **Loopback Interfaces**:

1. Virtual interfaces
2. Always up unless administratively down
3. Used for testing, management, and routing protocol purposes





```shellscript
# Configure a loopback interface
Router(config)# interface Loopback0
Router(config-if)# description Router ID
Router(config-if)# ip address 10.0.0.1 255.255.255.255
```

### Interface Configuration Parameters

1. **IP Addressing**:

1. Assigns an IP address and subnet mask to the interface
2. Can be static or dynamic (DHCP)





```shellscript
# Configure static IP address
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip address 192.168.1.1 255.255.255.0

# Configure secondary IP address
Router(config-if)# ip address 192.168.2.1 255.255.255.0 secondary

# Configure DHCP client
Router(config-if)# ip address dhcp
```

2. **IPv6 Addressing**:

1. Assigns IPv6 addresses to the interface
2. Can be static, SLAAC, or DHCPv6





```shellscript
# Enable IPv6 routing
Router(config)# ipv6 unicast-routing

# Configure static IPv6 address
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ipv6 address 2001:db8:1::1/64

# Configure link-local address
Router(config-if)# ipv6 address fe80::1 link-local

# Configure IPv6 DHCP client
Router(config-if)# ipv6 address dhcp
```

3. **Bandwidth and Delay**:

1. Used by routing protocols to calculate metrics
2. Does not affect actual interface speed





```shellscript
# Configure bandwidth
Router(config)# interface Serial0/0/0
Router(config-if)# bandwidth 1544  # in Kbps

# Configure delay
Router(config-if)# delay 20  # in tens of microseconds
```

4. **MTU (Maximum Transmission Unit)**:

1. Maximum packet size that can be transmitted
2. Default is 1500 bytes for Ethernet





```shellscript
# Configure MTU
Router(config)# interface GigabitEthernet0/0
Router(config-if)# mtu 1400
```

5. **Load Balancing**:

1. Equal-Cost Multi-Path (ECMP) routing
2. Distributes traffic across multiple paths





```shellscript
# Configure maximum paths for OSPF
Router(config)# router ospf 1
Router(config-router)# maximum-paths 4

# Configure per-packet or per-destination load balancing
Router(config)# ip cef
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip load-sharing per-packet
```

### Subinterfaces

Subinterfaces are logical divisions of a physical interface, typically used for inter-VLAN routing (router-on-a-stick).

```shellscript
# Configure subinterfaces for inter-VLAN routing
Router(config)# interface GigabitEthernet0/0
Router(config-if)# no shutdown
Router(config-if)# exit

Router(config)# interface GigabitEthernet0/0.10
Router(config-subif)# description VLAN 10 - Engineering
Router(config-subif)# encapsulation dot1q 10
Router(config-subif)# ip address 192.168.10.1 255.255.255.0
Router(config-subif)# exit

Router(config)# interface GigabitEthernet0/0.20
Router(config-subif)# description VLAN 20 - Marketing
Router(config-subif)# encapsulation dot1q 20
Router(config-subif)# ip address 192.168.20.1 255.255.255.0
```

### Interface Verification and Troubleshooting

```shellscript
# View interface status
Router# show interfaces
Router# show ip interface brief
Router# show ipv6 interface brief

# View detailed interface information
Router# show interfaces GigabitEthernet0/0
Router# show ip interface GigabitEthernet0/0
Router# show ipv6 interface GigabitEthernet0/0

# View interface statistics
Router# show interfaces GigabitEthernet0/0 stats
Router# show interfaces GigabitEthernet0/0 accounting

# View interface errors
Router# show interfaces GigabitEthernet0/0 | include error
Router# show interfaces GigabitEthernet0/0 counters errors

# Clear interface counters
Router# clear counters GigabitEthernet0/0

# Debug interface
Router# debug interface GigabitEthernet0/0
```

### Common Interface Issues

1. **Interface is Down/Down**:

1. Physical layer issue
2. Check cable, connectors, and hardware



2. **Interface is Up/Down**:

1. Data Link layer issue
2. Check encapsulation, clock rate (for serial), duplex/speed settings



3. **Interface is Up/Up but No Connectivity**:

1. Network layer issue
2. Check IP addressing, routing, ACLs



4. **High Error Rates**:

1. Check for CRC errors, input/output errors, collisions
2. May indicate cable problems, duplex mismatch, or hardware issues





## Understanding Router Path Selection

Routers use a systematic process to determine the best path for forwarding packets.

### Routing Table Structure

The routing table contains information about known networks and how to reach them.

```shellscript
# View the routing table
Router# show ip route
Router# show ipv6 route
```

A typical routing table entry includes:

1. **Route Source**: Indicates how the route was learned

1. C: Directly connected
2. S: Static
3. O: OSPF
4. D: EIGRP
5. R: RIP
6. B: BGP
7. etc.



2. **Destination Network**: The network address and prefix length/subnet mask
3. **Administrative Distance**: Trustworthiness of the route source
4. **Metric**: Cost of the route according to the routing protocol
5. **Next Hop**: The IP address of the next router in the path
6. **Outgoing Interface**: The interface through which packets will be forwarded


### Route Selection Process

When a router receives a packet, it follows these steps to determine where to forward it:

1. **Longest Prefix Match**:

1. The router looks for the most specific (longest prefix) match in the routing table
2. For example, a /24 route is more specific than a /16 route



2. **Administrative Distance**:

1. If multiple routing protocols learn routes to the same destination, the route with the lowest AD is preferred
2. For example, a static route (AD=1) is preferred over an OSPF route (AD=110)



3. **Metric**:

1. If multiple routes have the same AD, the route with the lowest metric is preferred
2. Metric calculation depends on the routing protocol



4. **Equal-Cost Multi-Path (ECMP)**:

1. If multiple routes have the same AD and metric, the router can load balance traffic across them
2. By default, Cisco routers perform per-destination load balancing



5. **Default Route**:

1. If no specific route matches, the router uses the default route (0.0.0.0/0 for IPv4, ::/0 for IPv6)
2. If no default route exists, the packet is dropped





### Static Routes

Static routes are manually configured and take precedence over dynamically learned routes due to their lower administrative distance.

```shellscript
# Configure a static route
Router(config)# ip route 192.168.2.0 255.255.255.0 192.168.1.2
# Or with an exit interface
Router(config)# ip route 192.168.2.0 255.255.255.0 GigabitEthernet0/1

# Configure a static route with a custom administrative distance
Router(config)# ip route 192.168.2.0 255.255.255.0 192.168.1.2 150

# Configure a floating static route (backup route)
Router(config)# ip route 192.168.2.0 255.255.255.0 192.168.3.2 200

# Configure a default route
Router(config)# ip route 0.0.0.0 0.0.0.0 192.168.1.2

# Configure an IPv6 static route
Router(config)# ipv6 route 2001:db8:2::/64 2001:db8:1::2
# Or with an exit interface
Router(config)# ipv6 route 2001:db8:2::/64 GigabitEthernet0/1

# Configure an IPv6 default route
Router(config)# ipv6 route ::/0 2001:db8:1::2
```

### Route Summarization

Route summarization (also called route aggregation) combines multiple routes into a single route advertisement, reducing the size of routing tables.

1. **Benefits**:

1. Smaller routing tables
2. Less router CPU and memory usage
3. Fewer routing updates
4. Improved network stability



2. **Calculation**:

1. Identify the common bits in the network addresses
2. Create a summary route with those common bits
3. The prefix length is the number of common bits



3. **Example**:

1. Routes: 192.168.16.0/24, 192.168.17.0/24, 192.168.18.0/24, 192.168.19.0/24
2. Binary:

1. 192.168.16.0: 11000000.10101000.00010000.00000000
2. 192.168.17.0: 11000000.10101000.00010001.00000000
3. 192.168.18.0: 11000000.10101000.00010010.00000000
4. 192.168.19.0: 11000000.10101000.00010011.00000000



3. Common bits: 11000000.10101000.00010xxx.xxxxxxxx (22 bits)
4. Summary route: 192.168.16.0/22





```shellscript
# Configure a summary route in OSPF
Router(config)# router ospf 1
Router(config-router)# area 0 range 192.168.16.0 255.255.252.0

# Configure a summary route in EIGRP
Router(config)# router eigrp 100
Router(config-router)# ip summary-address eigrp 100 192.168.16.0 255.255.252.0

# Configure a static summary route
Router(config)# ip route 192.168.16.0 255.255.252.0 Null0
```

### Classful vs. Classless Routing

1. **Classful Routing**:

1. Uses traditional IP address classes (A, B, C)
2. Does not send subnet mask information in routing updates
3. Assumes all subnets of a network use the same subnet mask
4. Examples: RIPv1, IGRP



2. **Classless Routing**:

1. Includes subnet mask information in routing updates
2. Supports Variable Length Subnet Masks (VLSM)
3. Supports route summarization
4. Examples: RIPv2, EIGRP, OSPF, IS-IS, BGP





```shellscript
# Configure classless routing behavior
Router(config)# ip classless  # Default in modern IOS

# View classful/classless configuration
Router# show running-config | include classless
```

## Understanding Routing Protocols

Routing protocols automatically exchange routing information between routers, allowing them to learn about remote networks and adapt to network changes.

### Types of Routing Protocols

1. **Interior Gateway Protocols (IGPs)**:

1. Used within an autonomous system
2. Examples: RIP, EIGRP, OSPF, IS-IS
3. Further divided into:

1. **Distance Vector**: RIP, IGRP (legacy)
2. **Advanced Distance Vector**: EIGRP
3. **Link State**: OSPF, IS-IS






2. **Exterior Gateway Protocols (EGPs)**:

1. Used between autonomous systems
2. Example: BGP (Border Gateway Protocol)





### Routing Protocol Characteristics

1. **Administrative Distance (AD)**:

1. Determines which routing protocol is preferred when multiple protocols learn routes to the same destination
2. Lower AD is preferred



2. **Metrics**:

1. Used to determine the best path to a destination
2. Different protocols use different metrics:

1. **RIP**: Hop count
2. **EIGRP**: Composite metric (bandwidth, delay, reliability, load)
3. **OSPF**: Cost (based on bandwidth)
4. **IS-IS**: Cost (configurable)
5. **BGP**: Path attributes (AS path, origin, next hop, etc.)






3. **Convergence Time**:

1. How quickly the protocol adapts to network changes
2. Link state protocols generally converge faster than distance vector protocols



4. **Scalability**:

1. How well the protocol handles large networks
2. Link state protocols are more scalable than distance vector protocols





### Distance Vector Protocols

Distance vector protocols share routing information with directly connected neighbors, who then propagate that information to their neighbors.

1. **Characteristics**:

1. Periodic routing updates
2. Uses hop count or other simple metrics
3. Slower convergence
4. Vulnerable to routing loops



2. **Loop Prevention Mechanisms**:

1. **Split Horizon**: Does not advertise routes back to the source
2. **Route Poisoning**: Advertises unreachable routes with infinite metric
3. **Hold-down Timers**: Ignores updates for a period after a route becomes unreachable
4. **Maximum Hop Count**: Limits the size of the network



3. **Example: RIP (Routing Information Protocol)**:

1. Simple distance vector protocol
2. Uses hop count as metric (maximum 15 hops)
3. Updates every 30 seconds
4. RIPv2 supports VLSM and authentication





```shellscript
# Configure RIPv2
Router(config)# router rip
Router(config-router)# version 2
Router(config-router)# network 192.168.1.0
Router(config-router)# network 192.168.2.0
Router(config-router)# no auto-summary

# Configure RIP authentication
Router(config)# key chain RIP-KEY
Router(config-keychain)# key 1
Router(config-keychain-key)# key-string SecretKey
Router(config-keychain-key)# exit
Router(config-keychain)# exit

Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip rip authentication mode md5
Router(config-if)# ip rip authentication key-chain RIP-KEY
```

### Link State Protocols

Link state protocols build a complete map of the network topology and use Dijkstra's algorithm to calculate the shortest path to each destination.

1. **Characteristics**:

1. Builds a topological database
2. Triggered updates (only when changes occur)
3. Faster convergence
4. More CPU and memory intensive
5. More scalable



2. **Operation**:

1. Routers establish adjacencies with neighbors
2. Routers flood Link State Advertisements (LSAs)
3. Each router builds an identical Link State Database (LSDB)
4. Each router independently calculates the best paths



3. **Example: OSPF (Open Shortest Path First)**:

1. Popular link state protocol
2. Uses cost (based on bandwidth) as metric
3. Supports VLSM, authentication, and route summarization
4. Hierarchical design with areas





```shellscript
# Configure OSPF
Router(config)# router ospf 1
Router(config-router)# network 192.168.1.0 0.0.0.255 area 0
Router(config-router)# network 192.168.2.0 0.0.0.255 area 0

# Configure OSPF authentication
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf authentication message-digest
Router(config-if)# ip ospf message-digest-key 1 md5 SecretKey
```

### Advanced Distance Vector Protocols

Advanced distance vector protocols combine the best features of distance vector and link state protocols.

1. **Example: EIGRP (Enhanced Interior Gateway Routing Protocol)**:

1. Cisco proprietary (now partially open)
2. Uses DUAL (Diffusing Update Algorithm)
3. Composite metric (bandwidth, delay, reliability, load)
4. Supports VLSM, authentication, and route summarization
5. Fast convergence





```shellscript
# Configure EIGRP
Router(config)# router eigrp 100
Router(config-router)# network 192.168.1.0 0.0.0.255
Router(config-router)# network 192.168.2.0 0.0.0.255
Router(config-router)# no auto-summary

# Configure EIGRP authentication
Router(config)# key chain EIGRP-KEY
Router(config-keychain)# key 1
Router(config-keychain-key)# key-string SecretKey
Router(config-keychain-key)# exit
Router(config-keychain)# exit

Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip authentication mode eigrp 100 md5
Router(config-if)# ip authentication key-chain eigrp 100 EIGRP-KEY
```

### Path Vector Protocols

Path vector protocols are used for inter-domain routing and make decisions based on routing policies rather than just metrics.

1. **Example: BGP (Border Gateway Protocol)**:

1. Used on the internet and in large enterprise networks
2. Uses path attributes to select the best path
3. Policy-based routing
4. Slow convergence but very stable





```shellscript
# Configure BGP
Router(config)# router bgp 65001
Router(config-router)# neighbor 192.168.1.2 remote-as 65002
Router(config-router)# network 192.168.1.0 mask 255.255.255.0
```

## Understanding OSPF

Open Shortest Path First (OSPF) is a link state routing protocol defined in RFC 2328 (OSPFv2) and RFC 5340 (OSPFv3). It is widely used in enterprise networks due to its scalability, fast convergence, and vendor-neutral implementation.

### OSPF Fundamentals

1. **OSPF Areas**:

1. Hierarchical design to improve scalability
2. Area 0 (backbone area) connects all other areas
3. Types of areas:

1. **Standard Area**: Contains all LSA types
2. **Stub Area**: Does not receive external routes
3. **Totally Stubby Area**: Only receives default route
4. **Not-So-Stubby Area (NSSA)**: Can import external routes






2. **OSPF Router Types**:

1. **Internal Router**: All interfaces in the same area
2. **Area Border Router (ABR)**: Interfaces in multiple areas
3. **Backbone Router**: At least one interface in Area 0
4. **Autonomous System Boundary Router (ASBR)**: Connects to other routing domains



3. **OSPF Packet Types**:

1. **Hello**: Discovers neighbors and maintains adjacencies
2. **Database Description (DBD)**: Summarizes database contents during adjacency formation
3. **Link State Request (LSR)**: Requests specific LSAs
4. **Link State Update (LSU)**: Sends requested LSAs
5. **Link State Acknowledgment (LSAck)**: Acknowledges receipt of LSAs



4. **OSPF States**:

1. **Down**: No Hello packets received
2. **Init**: Hello packet received
3. **2-Way**: Bidirectional communication established
4. **ExStart**: Master/slave relationship established
5. **Exchange**: Database description packets exchanged
6. **Loading**: Link state requests sent
7. **Full**: Adjacency complete





### OSPF Configuration

```shellscript
# Basic OSPF configuration
Router(config)# router ospf 1
Router(config-router)# router-id 1.1.1.1
Router(config-router)# network 192.168.1.0 0.0.0.255 area 0
Router(config-router)# network 192.168.2.0 0.0.0.255 area 1

# Configure OSPF on specific interfaces
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf 1 area 0

Router(config)# interface GigabitEthernet0/1
Router(config-if)# ip ospf 1 area 1

# Configure OSPF timers
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf hello-interval 10
Router(config-if)# ip ospf dead-interval 40

# Configure OSPF authentication
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf authentication message-digest
Router(config-if)# ip ospf message-digest-key 1 md5 SecretKey

# Configure OSPF priority (for DR/BDR election)
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf priority 100

# Configure OSPF cost
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf cost 100

# Configure OSPF network type
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip ospf network broadcast
```

### OSPF Area Types

```shellscript
# Configure a stub area
Router(config)# router ospf 1
Router(config-router)# area 1 stub

# Configure a totally stubby area
Router(config)# router ospf 1
Router(config-router)# area 1 stub no-summary

# Configure an NSSA
Router(config)# router ospf 1
Router(config-router)# area 2 nssa

# Configure a totally NSSA
Router(config)# router ospf 1
Router(config-router)# area 2 nssa no-summary
```

### OSPF Route Summarization

```shellscript
# Summarize routes at an ABR
Router(config)# router ospf 1
Router(config-router)# area 1 range 192.168.16.0 255.255.252.0

# Summarize external routes at an ASBR
Router(config)# router ospf 1
Router(config-router)# summary-address 192.168.16.0 255.255.252.0
```

### OSPF Virtual Links

Virtual links are used to connect areas that are not physically connected to Area 0.

```shellscript
# Configure a virtual link
Router(config)# router ospf 1
Router(config-router)# area 2 virtual-link 3.3.3.3
```

### OSPF Default Route

```shellscript
# Advertise a default route
Router(config)# router ospf 1
Router(config-router)# default-information originate always
```

### OSPFv3 (for IPv6)

```shellscript
# Configure OSPFv3
Router(config)# ipv6 router ospf 1
Router(config-rtr)# router-id 1.1.1.1
Router(config-rtr)# exit

Router(config)# interface GigabitEthernet0/0
Router(config-if)# ipv6 ospf 1 area 0

Router(config)# interface GigabitEthernet0/1
Router(config-if)# ipv6 ospf 1 area 1
```

### OSPF Verification and Troubleshooting

```shellscript
# View OSPF neighbors
Router# show ip ospf neighbor
Router# show ip ospf neighbor detail

# View OSPF database
Router# show ip ospf database
Router# show ip ospf database router
Router# show ip ospf database network
Router# show ip ospf database summary
Router# show ip ospf database external

# View OSPF interfaces
Router# show ip ospf interface
Router# show ip ospf interface GigabitEthernet0/0
Router# show ip ospf interface brief

# View OSPF routes
Router# show ip route ospf

# View OSPF statistics
Router# show ip ospf statistics

# View OSPF configuration
Router# show running-config | section router ospf

# Debug OSPF
Router# debug ip ospf events
Router# debug ip ospf adj
Router# debug ip ospf packets
```

### Common OSPF Issues

1. **Neighbor Adjacency Issues**:

1. Mismatched area numbers
2. Mismatched authentication
3. Mismatched hello/dead timers
4. Mismatched network types
5. Mismatched MTU



2. **Route Advertisement Issues**:

1. Missing network statements
2. ACLs blocking OSPF packets
3. Incorrect area type configuration
4. Incorrect summarization



3. **Performance Issues**:

1. Too many routers in an area
2. Too many LSAs
3. Frequent topology changes





## Understanding FHRPs

First Hop Redundancy Protocols (FHRPs) provide gateway redundancy, allowing multiple routers to act as a single virtual router.

### FHRP Concepts

1. **Purpose**:

1. Provides gateway redundancy
2. Eliminates single points of failure
3. Enables load balancing



2. **Operation**:

1. Multiple physical routers share a virtual IP address
2. One router is active/primary, others are standby/backup
3. If the active router fails, a standby router takes over



3. **Common FHRPs**:

1. **HSRP (Hot Standby Router Protocol)**: Cisco proprietary
2. **VRRP (Virtual Router Redundancy Protocol)**: Industry standard (RFC 5798)
3. **GLBP (Gateway Load Balancing Protocol)**: Cisco proprietary with load balancing





### HSRP (Hot Standby Router Protocol)

HSRP is a Cisco proprietary protocol that allows multiple routers to work together to present the appearance of a single virtual router.

1. **HSRP States**:

1. **Initial**: Starting state
2. **Learn**: Waiting to hear from the active router
3. **Listen**: Monitoring hello messages
4. **Speak**: Sending hello messages
5. **Standby**: Ready to become active
6. **Active**: Currently forwarding traffic



2. **HSRP Versions**:

1. **HSRPv1**: Original version
2. **HSRPv2**: Adds support for IPv6, millisecond timers, and group numbers up to 4095





```shellscript
# Configure HSRP
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip address 192.168.1.1 255.255.255.0
Router(config-if)# standby 1 ip 192.168.1.254
Router(config-if)# standby 1 priority 110
Router(config-if)# standby 1 preempt
Router(config-if)# standby 1 authentication SecretKey
Router(config-if)# standby 1 timers 1 3

# Configure HSRP tracking
Router(config)# track 1 interface GigabitEthernet0/1 line-protocol
Router(config)# interface GigabitEthernet0/0
Router(config-if)# standby 1 track 1 decrement 20

# Configure HSRP for IPv6
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ipv6 address 2001:db8:1::1/64
Router(config-if)# standby 1 ipv6 2001:db8:1::254
Router(config-if)# standby 1 priority 110
Router(config-if)# standby 1 preempt

# Configure HSRPv2
Router(config)# interface GigabitEthernet0/0
Router(config-if)# standby version 2
Router(config-if)# standby 1 ip 192.168.1.254
```

### VRRP (Virtual Router Redundancy Protocol)

VRRP is an open standard protocol (RFC 5798) that provides similar functionality to HSRP.

1. **VRRP States**:

1. **Initialize**: Starting state
2. **Backup**: Monitoring the master router
3. **Master**: Currently forwarding traffic



2. **VRRP vs. HSRP**:

1. VRRP is an open standard, HSRP is Cisco proprietary
2. VRRP uses "master" and "backup", HSRP uses "active" and "standby"
3. VRRP allows the virtual IP to be the same as a physical router's IP





```shellscript
# Configure VRRP
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip address 192.168.1.1 255.255.255.0
Router(config-if)# vrrp 1 ip 192.168.1.254
Router(config-if)# vrrp 1 priority 110
Router(config-if)# vrrp 1 preempt

# Configure VRRP tracking
Router(config)# track 1 interface GigabitEthernet0/1 line-protocol
Router(config)# interface GigabitEthernet0/0
Router(config-if)# vrrp 1 track 1 decrement 20

# Configure VRRP for IPv6
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ipv6 address 2001:db8:1::1/64
Router(config-if)# vrrp 1 ipv6 2001:db8:1::254
Router(config-if)# vrrp 1 priority 110
Router(config-if)# vrrp 1 preempt
```

### GLBP (Gateway Load Balancing Protocol)

GLBP is a Cisco proprietary protocol that provides both gateway redundancy and load balancing.

1. **GLBP Roles**:

1. **Active Virtual Gateway (AVG)**: Responds to ARP requests
2. **Active Virtual Forwarder (AVF)**: Forwards traffic
3. Multiple AVFs can exist, allowing load balancing



2. **GLBP Load Balancing Methods**:

1. **Round-robin**: Each virtual forwarder is used in turn
2. **Weighted**: Based on configured weights
3. **Host-dependent**: Based on the host's MAC address





```shellscript
# Configure GLBP
Router(config)# interface GigabitEthernet0/0
Router(config-if)# ip address 192.168.1.1 255.255.255.0
Router(config-if)# glbp 1 ip 192.168.1.254
Router(config-if)# glbp 1 priority 110
Router(config-if)# glbp 1 preempt
Router(config-if)# glbp 1 authentication md5 key-string SecretKey
Router(config-if)# glbp 1 timers 1 3

# Configure GLBP load balancing
Router(config-if)# glbp 1 load-balancing weighted

# Configure GLBP weighting
Router(config-if)# glbp 1 weighting 100 lower 50 upper 80
Router(config-if)# glbp 1 weighting track 1 decrement 20

# Configure GLBP tracking
Router(config)# track 1 interface GigabitEthernet0/1 line-protocol
Router(config)# interface GigabitEthernet0/0
Router(config-if)# glbp 1 weighting track 1 decrement 20
```

### FHRP Verification and Troubleshooting

```shellscript
# View HSRP status
Router# show standby
Router# show standby brief
Router# show standby GigabitEthernet0/0

# View VRRP status
Router# show vrrp
Router# show vrrp brief
Router# show vrrp GigabitEthernet0/0

# View GLBP status
Router# show glbp
Router# show glbp brief
Router# show glbp GigabitEthernet0/0

# Debug HSRP
Router# debug standby

# Debug VRRP
Router# debug vrrp

# Debug GLBP
Router# debug glbp
```

### Common FHRP Issues

1. **Mismatched Configuration**:

1. Different group numbers
2. Different virtual IP addresses
3. Different authentication settings



2. **Priority Issues**:

1. Incorrect priority settings
2. Preempt not configured



3. **Tracking Issues**:

1. Incorrect tracking configuration
2. Tracked interface not monitored correctly



4. **Timer Issues**:

1. Mismatched hello/hold timers
2. Too aggressive timers causing instability





## Conclusion

This comprehensive guide covers the essential topics for Week 4 of CCNA exam preparation, focusing on IP routing. Understanding router benefits, common router features, router interface configuration, path selection, routing protocols, OSPF, and First Hop Redundancy Protocols (FHRPs) is crucial for success in the CCNA exam and in real-world networking scenarios.

Remember to practice the commands and configurations provided in this guide. Hands-on experience is invaluable for mastering networking concepts and troubleshooting skills.

As you continue your CCNA preparation, focus on understanding the underlying principles rather than just memorizing commands. This approach will help you adapt to different scenarios and solve complex networking problems.

Good luck with your CCNA exam preparation!
